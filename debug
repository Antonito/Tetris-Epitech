==20954== Memcheck, a memory error detector
==20954== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==20954== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==20954== Command: ./tetris
==20954== Parent PID: 19802
==20954==
==20954== Use of uninitialised value of size 8
==20954==    at 0x4021BF: add_tetri (add_tetri.c:48)
==20954==    by 0x4011E1: tetris (main.c:65)
==20954==    by 0x403FE2: check_args (check_args.c:118)
==20954==    by 0x401507: main (main.c:92)
==20954==
==20954== Invalid write of size 4
==20954==    at 0x4021BF: add_tetri (add_tetri.c:48)
==20954==    by 0x4011E1: tetris (main.==20954==    by 0x403FE2: check_args (check_args.c:118)
==20954==    by 0x401507: main (main.c:92)
==20954==  Address 0x20 is not stack'd, malloc'd or (recently) free'd
==20954==
==20954==
==20954== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==20954==  Access not within mapped region at address 0x20
==20954==    at 0x4021BF: add_tetri (add_tetri.c:48)
==20954==    by 0x4011E1: tetris (main.c:65)
==20954==    by 0x403FE2: check_args (check_args.c:118)
==20954==    by 0x401507: main (main.c:92)
==20954==  If you believe this happened as a result of a stack
==20954==  overflow in your program's main thread (unlikely but
==20954==  possible), you can try to increase the size of the
==20954==  main thread stack using the --main-stacksize= flag.
==20954==  The main thread stack size used in this run was 8388608.
==20954==
==20954== HEAP SUMMARY:
==20954==     in use at exit: 15,154 bytes in 16 blocks
==20954==   total heap usage: 24 allocs, 8 frees, 24,851 bytes allocated
==20954==
==20954== LEAK SUMMARY:
==20954==    definitely lost: 0 bytes in 0 blocks
==20954==    indirectly lost: 0 bytes in 0 blocks
==20954==      possibly lost: 0 bytes in 0 blocks
==20954==    still reachable: 15,154 bytes in 16 blocks
==20954==         suppressed: 0 bytes in 0 blocks
==20954== Rerun with --leak-check=full to see details of leaked memory
==20954==
==20954== For counts of detected and suppressed errors, rerun with: -v
==20954== Use --track-origins=yes to see where uninitialised values come from
==20954== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
